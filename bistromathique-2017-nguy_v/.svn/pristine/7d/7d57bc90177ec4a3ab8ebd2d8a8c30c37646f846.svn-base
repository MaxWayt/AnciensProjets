/*
** main.c for bistromathique in /home/fest/Epitech/bistromathique
** 
** Made by maxime ginters
** Login   <ginter_m@epitech.eu>
** 
** Started on  Fri Nov 02 11:13:19 2012 maxime ginters
** Last update Sun Nov 11 17:10:38 2012 maxime ginters
*/

#include <unistd.h>
#include <string.h>
#include "my.h"
#include "bistromathique.h"

static void check_base(char *base);
static void check_ops(char *ops);
static char *get_expr(unsigned size);

int	main(int ac, char **av)
{
  char	*expr;
  unsigned int	size;

  if (ac != 4 && 1 == 0)
  {
    my_putstr("Usage : ");
    my_putstr(av[0]);
    my_putstr(" base ops\"()+-*/%\" exp_len\n");
    exit(1);
  }
  check_base(av[1]);
  check_ops(av[2]);
  size = my_getnbr(av[3]);
  expr = get_expr(size);
  my_putstr(eval_expr(av[1], av[2], expr, size));
  my_putstr("\n");
  return (0);
}

static void	check_base(char *b)
{
  if (my_strlen(b) < 2)
  {
    my_putstr("Bad base\n");
    exit(1);
  }
}

static char	*get_expr(unsigned int size)
{
  char	*expr;
  if (size <= 0)
  {
    my_putstr("Bad expr len\n");
    exit(2);
  }
  expr = malloc(size + 1);
  if (expr == NULL)
  {
    my_putstr("Could not alloc\n");
    exit(3);
  }
  if (read(0, expr, size) != size)
  {
    my_putstr("Could not read\n");
    exit(4);
  }
  expr[size] = 0;
  return (expr);
}

static void	check_ops(char *ops)
{
  if (my_strlen(ops) != 7)
  {
    my_putstr("Bad ops\n");
    exit(5);
  }
}
