/*
** ElfOfPePeNoel.cpp for piscine_cpp_rush2-2016-leroy_v in /home/fest/Epitech/Piscine_tek2/piscine_cpp_rush2-2016-leroy_v
**
** Made by maxime ginters
** Login  <ginter_m@epitech.eu>
**
** Started on  Sat Jan 19 23:18:57 2013 maxime ginters
** Last update Sun Jan 20 00:17:11 2013 maxime ginters
*/

#include <iostream>
#include <ctime>
#include "ElfOfPePeNoel.h"

ElfOfPePeNoel::ElfOfPePeNoel() :
    _table(NULL), _conveyor(NULL)
{
    srand(time(NULL));
}

ElfOfPePeNoel::~ElfOfPePeNoel()
{
}

void ElfOfPePeNoel::PrepareToWork(TablePePeNoel* table, ConveyorBeltPePeNoel* conveyor)
{
    if (canWork())
    {
        std::cout << ELFOFPEPENOEL_STILL_INSTALLED << std::endl;
        return;
    }
    _table = table;
    _conveyor = conveyor;
    std::cout << ELFOFPEPENOEL_INSTALLED << std::endl;
}

Object* ElfOfPePeNoel::TakeNewToy()
{
    if (!canWork())
    {
        std::cout << ELFOFPEPENOEL_CANT_WORK << std::endl;
        return;
    }

    Object* obj = NULL;
    switch (rand() & SUB_TOY_COUNT)
    {
        case TYPE_TEDDY:
            obj = new Teddy();
            break;
        case TYPE_LITTLEPONEY:
            obj = new LittlePoney();
            break;
        case TYPE_SEXTOY:
            obj = new SexToy();
            break;
        default:
            std::cout << "Error: in ElfOfPePeNoel::TakeNewToy()" << std::endl;
            return NULL;
    }
    if (Toy* toy = obj->ToToy())
        toy->isTaken();
    return obj;
}

bool ElfOfPePeNoel::canWork() const
{
    return _table && _conveyor && !_table->isBroken();
}

void PutOnTable(Object*& obj)
{
    if (_table)
        _table->put(obj);
    obj = NULL;
}

void ElfOfPePeNoel::Work()
{
    if (!canWork())
    {
        std::cout << ELFOFPEPENOEL_CANT_WORK << std::endl;
        return;
    }

    while (canWork())
    {
        Object* obj = TakeNewToy();
        PutOnTable(obj);
        obj = NULL;
        _conveyor->IN();
        obj = _conveyor->take();
        if (obj->getSubType() == TYPE_BOX)
        {
            obj->ToBox()->wrapMeThat(_table->take(SUB_TYPE_TOY));
            PutOnTable(obj);
            obj
        }

        while (!can)
        // si on trouve un objet a emballer sur la table
        if (Object* obj = _table->take(SUB_TYPE_TOY))
        {

        }
        else
        {
            if (Object* obj = TakeNewToy())
            {

            }

        }
    }
}


